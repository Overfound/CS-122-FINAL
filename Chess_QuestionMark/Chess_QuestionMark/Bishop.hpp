#pragma once
#include "Pieces.hpp"


class Bishop : public Pieces {
public:
	Bishop(std::string SideTWFB = "", Cordinate InitalLocation = NULL) {
		memcpy(this->movement, movements, sizeof(movement));
		this->setPieceSide(SideTWFB);
		this->setCurPos(InitalLocation);
		Identifer = "Bishop";
		Blank = false;
		canJump = false;
		genMoveList();
	}
	~Bishop() {

	}
	std::string specialFunction(Board* curboard, std::string marker = "") {
		return "";
	}
private:

	char movements[15][15] = {{'X','`','`','`','`','`','`','`','`','`','`','`','`','`','X'}
							,{'`','X','`','`','`','`','`','`','`','`','`','`','`','X','`'}
							,{'`','`','X','`','`','`','`','`','`','`','`','`','X','`','`'}
							,{'`','`','`','X','`','`','`','`','`','`','`','X','`','`','`'}
							,{'`','`','`','`','X','`','`','`','`','`','X','`','`','`','`'}
							,{'`','`','`','`','`','X','`','`','`','X','`','`','`','`','`'}
							,{'`','`','`','`','`','`','X','`','X','`','`','`','`','`','`'}
							,{'`','`','`','`','`','`','`','I','`','`','`','`','`','`','`'}
							,{'`','`','`','`','`','`','X','`','X','`','`','`','`','`','`'}
							,{'`','`','`','`','`','X','`','`','`','X','`','`','`','`','`'}
							,{'`','`','`','`','X','`','`','`','`','`','X','`','`','`','`'}
							,{'`','`','`','X','`','`','`','`','`','`','`','X','`','`','`'}
							,{'`','`','X','`','`','`','`','`','`','`','`','`','X','`','`'}
							,{'`','X','`','`','`','`','`','`','`','`','`','`','`','X','`'}
							,{'X','`','`','`','`','`','`','`','`','`','`','`','`','`','X'} };
	
};
